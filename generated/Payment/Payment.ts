// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AdminChanged extends ethereum.Event {
  get params(): AdminChanged__Params {
    return new AdminChanged__Params(this);
  }
}

export class AdminChanged__Params {
  _event: AdminChanged;

  constructor(event: AdminChanged) {
    this._event = event;
  }

  get previousAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class BeaconUpgraded extends ethereum.Event {
  get params(): BeaconUpgraded__Params {
    return new BeaconUpgraded__Params(this);
  }
}

export class BeaconUpgraded__Params {
  _event: BeaconUpgraded;

  constructor(event: BeaconUpgraded) {
    this._event = event;
  }

  get beacon(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class CashbackChanged extends ethereum.Event {
  get params(): CashbackChanged__Params {
    return new CashbackChanged__Params(this);
  }
}

export class CashbackChanged__Params {
  _event: CashbackChanged;

  constructor(event: CashbackChanged) {
    this._event = event;
  }

  get cashback(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class Payed extends ethereum.Event {
  get params(): Payed__Params {
    return new Payed__Params(this);
  }
}

export class Payed__Params {
  _event: Payed;

  constructor(event: Payed) {
    this._event = event;
  }

  get payer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get paymentToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get productAlias(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get priceInPaymentToken(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get cashbackInPaymentToken(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class PaymentTokenAdded extends ethereum.Event {
  get params(): PaymentTokenAdded__Params {
    return new PaymentTokenAdded__Params(this);
  }
}

export class PaymentTokenAdded__Params {
  _event: PaymentTokenAdded;

  constructor(event: PaymentTokenAdded) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PaymentTokenRemoved extends ethereum.Event {
  get params(): PaymentTokenRemoved__Params {
    return new PaymentTokenRemoved__Params(this);
  }
}

export class PaymentTokenRemoved__Params {
  _event: PaymentTokenRemoved;

  constructor(event: PaymentTokenRemoved) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PointTokenChanged extends ethereum.Event {
  get params(): PointTokenChanged__Params {
    return new PointTokenChanged__Params(this);
  }
}

export class PointTokenChanged__Params {
  _event: PointTokenChanged;

  constructor(event: PointTokenChanged) {
    this._event = event;
  }

  get pointToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class TreasuryChanged extends ethereum.Event {
  get params(): TreasuryChanged__Params {
    return new TreasuryChanged__Params(this);
  }
}

export class TreasuryChanged__Params {
  _event: TreasuryChanged;

  constructor(event: TreasuryChanged) {
    this._event = event;
  }

  get treasury(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class UniswapPriceOracleChanged extends ethereum.Event {
  get params(): UniswapPriceOracleChanged__Params {
    return new UniswapPriceOracleChanged__Params(this);
  }
}

export class UniswapPriceOracleChanged__Params {
  _event: UniswapPriceOracleChanged;

  constructor(event: UniswapPriceOracleChanged) {
    this._event = event;
  }

  get uniswapPriceOracle(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Payment__getPriceWithDiscountResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }
}

export class Payment__paymentTokenSwapInfoResult {
  value0: i32;
  value1: i32;

  constructor(value0: i32, value1: i32) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0))
    );
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1))
    );
    return map;
  }

  getPoolFee(): i32 {
    return this.value0;
  }

  getSecondsAgo(): i32 {
    return this.value1;
  }
}

export class Payment extends ethereum.SmartContract {
  static bind(address: Address): Payment {
    return new Payment("Payment", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  FACTORY_CONTRACT_ROLE(): Bytes {
    let result = super.call(
      "FACTORY_CONTRACT_ROLE",
      "FACTORY_CONTRACT_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_FACTORY_CONTRACT_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "FACTORY_CONTRACT_ROLE",
      "FACTORY_CONTRACT_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  PAYMENT_ROLE(): Bytes {
    let result = super.call("PAYMENT_ROLE", "PAYMENT_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_PAYMENT_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("PAYMENT_ROLE", "PAYMENT_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  accessControl(): Address {
    let result = super.call("accessControl", "accessControl():(address)", []);

    return result[0].toAddress();
  }

  try_accessControl(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "accessControl",
      "accessControl():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  cashback(): Address {
    let result = super.call("cashback", "cashback():(address)", []);

    return result[0].toAddress();
  }

  try_cashback(): ethereum.CallResult<Address> {
    let result = super.tryCall("cashback", "cashback():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getPaymentToken(index_: BigInt): Address {
    let result = super.call(
      "getPaymentToken",
      "getPaymentToken(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(index_)]
    );

    return result[0].toAddress();
  }

  try_getPaymentToken(index_: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getPaymentToken",
      "getPaymentToken(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(index_)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getPriceWithDiscount(
    paymentToken_: Address,
    price_: BigInt,
    cashback_: BigInt,
    discount_: BigInt
  ): Payment__getPriceWithDiscountResult {
    let result = super.call(
      "getPriceWithDiscount",
      "getPriceWithDiscount(address,uint256,uint256,uint256):(uint256,uint256)",
      [
        ethereum.Value.fromAddress(paymentToken_),
        ethereum.Value.fromUnsignedBigInt(price_),
        ethereum.Value.fromUnsignedBigInt(cashback_),
        ethereum.Value.fromUnsignedBigInt(discount_)
      ]
    );

    return new Payment__getPriceWithDiscountResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_getPriceWithDiscount(
    paymentToken_: Address,
    price_: BigInt,
    cashback_: BigInt,
    discount_: BigInt
  ): ethereum.CallResult<Payment__getPriceWithDiscountResult> {
    let result = super.tryCall(
      "getPriceWithDiscount",
      "getPriceWithDiscount(address,uint256,uint256,uint256):(uint256,uint256)",
      [
        ethereum.Value.fromAddress(paymentToken_),
        ethereum.Value.fromUnsignedBigInt(price_),
        ethereum.Value.fromUnsignedBigInt(cashback_),
        ethereum.Value.fromUnsignedBigInt(discount_)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Payment__getPriceWithDiscountResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  getSwapAmount(
    receiveToken_: Address,
    swapToken_: Address,
    swapAmount_: BigInt
  ): BigInt {
    let result = super.call(
      "getSwapAmount",
      "getSwapAmount(address,address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(receiveToken_),
        ethereum.Value.fromAddress(swapToken_),
        ethereum.Value.fromUnsignedBigInt(swapAmount_)
      ]
    );

    return result[0].toBigInt();
  }

  try_getSwapAmount(
    receiveToken_: Address,
    swapToken_: Address,
    swapAmount_: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getSwapAmount",
      "getSwapAmount(address,address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(receiveToken_),
        ethereum.Value.fromAddress(swapToken_),
        ethereum.Value.fromUnsignedBigInt(swapAmount_)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isNotUpgradeable(): boolean {
    let result = super.call(
      "isNotUpgradeable",
      "isNotUpgradeable():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_isNotUpgradeable(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isNotUpgradeable",
      "isNotUpgradeable():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  paymentTokenSwapInfo(param0: Address): Payment__paymentTokenSwapInfoResult {
    let result = super.call(
      "paymentTokenSwapInfo",
      "paymentTokenSwapInfo(address):(uint24,uint24)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new Payment__paymentTokenSwapInfoResult(
      result[0].toI32(),
      result[1].toI32()
    );
  }

  try_paymentTokenSwapInfo(
    param0: Address
  ): ethereum.CallResult<Payment__paymentTokenSwapInfoResult> {
    let result = super.tryCall(
      "paymentTokenSwapInfo",
      "paymentTokenSwapInfo(address):(uint24,uint24)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Payment__paymentTokenSwapInfoResult(
        value[0].toI32(),
        value[1].toI32()
      )
    );
  }

  pointToken(): Address {
    let result = super.call("pointToken", "pointToken():(address)", []);

    return result[0].toAddress();
  }

  try_pointToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("pointToken", "pointToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  proxiableUUID(): Bytes {
    let result = super.call("proxiableUUID", "proxiableUUID():(bytes32)", []);

    return result[0].toBytes();
  }

  try_proxiableUUID(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "proxiableUUID",
      "proxiableUUID():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  treasury(): Address {
    let result = super.call("treasury", "treasury():(address)", []);

    return result[0].toAddress();
  }

  try_treasury(): ethereum.CallResult<Address> {
    let result = super.tryCall("treasury", "treasury():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  uniPriceOracle(): Address {
    let result = super.call("uniPriceOracle", "uniPriceOracle():(address)", []);

    return result[0].toAddress();
  }

  try_uniPriceOracle(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "uniPriceOracle",
      "uniPriceOracle():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class Payment_initCall extends ethereum.Call {
  get inputs(): Payment_initCall__Inputs {
    return new Payment_initCall__Inputs(this);
  }

  get outputs(): Payment_initCall__Outputs {
    return new Payment_initCall__Outputs(this);
  }
}

export class Payment_initCall__Inputs {
  _call: Payment_initCall;

  constructor(call: Payment_initCall) {
    this._call = call;
  }

  get accessControl_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class Payment_initCall__Outputs {
  _call: Payment_initCall;

  constructor(call: Payment_initCall) {
    this._call = call;
  }
}

export class PayCall extends ethereum.Call {
  get inputs(): PayCall__Inputs {
    return new PayCall__Inputs(this);
  }

  get outputs(): PayCall__Outputs {
    return new PayCall__Outputs(this);
  }
}

export class PayCall__Inputs {
  _call: PayCall;

  constructor(call: PayCall) {
    this._call = call;
  }

  get product_(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get paymentToken_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get payer_(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get price_(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get cashback_(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get discountProducts_(): Array<Bytes> {
    return this._call.inputValues[5].value.toBytesArray();
  }

  get discounts_(): Array<BigInt> {
    return this._call.inputValues[6].value.toBigIntArray();
  }
}

export class PayCall__Outputs {
  _call: PayCall;

  constructor(call: PayCall) {
    this._call = call;
  }
}

export class PayNativeCall extends ethereum.Call {
  get inputs(): PayNativeCall__Inputs {
    return new PayNativeCall__Inputs(this);
  }

  get outputs(): PayNativeCall__Outputs {
    return new PayNativeCall__Outputs(this);
  }
}

export class PayNativeCall__Inputs {
  _call: PayNativeCall;

  constructor(call: PayNativeCall) {
    this._call = call;
  }

  get product_(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get paymentToken_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get payer_(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get price_(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get cashback_(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get discountProducts_(): Array<Bytes> {
    return this._call.inputValues[5].value.toBytesArray();
  }

  get discounts_(): Array<BigInt> {
    return this._call.inputValues[6].value.toBigIntArray();
  }
}

export class PayNativeCall__Outputs {
  _call: PayNativeCall;

  constructor(call: PayNativeCall) {
    this._call = call;
  }
}

export class RemoveUpgradeabilityCall extends ethereum.Call {
  get inputs(): RemoveUpgradeabilityCall__Inputs {
    return new RemoveUpgradeabilityCall__Inputs(this);
  }

  get outputs(): RemoveUpgradeabilityCall__Outputs {
    return new RemoveUpgradeabilityCall__Outputs(this);
  }
}

export class RemoveUpgradeabilityCall__Inputs {
  _call: RemoveUpgradeabilityCall;

  constructor(call: RemoveUpgradeabilityCall) {
    this._call = call;
  }
}

export class RemoveUpgradeabilityCall__Outputs {
  _call: RemoveUpgradeabilityCall;

  constructor(call: RemoveUpgradeabilityCall) {
    this._call = call;
  }
}

export class SetAccessControlCall extends ethereum.Call {
  get inputs(): SetAccessControlCall__Inputs {
    return new SetAccessControlCall__Inputs(this);
  }

  get outputs(): SetAccessControlCall__Outputs {
    return new SetAccessControlCall__Outputs(this);
  }
}

export class SetAccessControlCall__Inputs {
  _call: SetAccessControlCall;

  constructor(call: SetAccessControlCall) {
    this._call = call;
  }

  get accessControl_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetAccessControlCall__Outputs {
  _call: SetAccessControlCall;

  constructor(call: SetAccessControlCall) {
    this._call = call;
  }
}

export class SetCashbackCall extends ethereum.Call {
  get inputs(): SetCashbackCall__Inputs {
    return new SetCashbackCall__Inputs(this);
  }

  get outputs(): SetCashbackCall__Outputs {
    return new SetCashbackCall__Outputs(this);
  }
}

export class SetCashbackCall__Inputs {
  _call: SetCashbackCall;

  constructor(call: SetCashbackCall) {
    this._call = call;
  }

  get cashback_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetCashbackCall__Outputs {
  _call: SetCashbackCall;

  constructor(call: SetCashbackCall) {
    this._call = call;
  }
}

export class SetPaymentTokensCall extends ethereum.Call {
  get inputs(): SetPaymentTokensCall__Inputs {
    return new SetPaymentTokensCall__Inputs(this);
  }

  get outputs(): SetPaymentTokensCall__Outputs {
    return new SetPaymentTokensCall__Outputs(this);
  }
}

export class SetPaymentTokensCall__Inputs {
  _call: SetPaymentTokensCall;

  constructor(call: SetPaymentTokensCall) {
    this._call = call;
  }

  get swapInfos_(): Array<SetPaymentTokensCallSwapInfos_Struct> {
    return this._call.inputValues[0].value.toTupleArray<
      SetPaymentTokensCallSwapInfos_Struct
    >();
  }

  get tokens_(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get statuses_(): Array<boolean> {
    return this._call.inputValues[2].value.toBooleanArray();
  }
}

export class SetPaymentTokensCall__Outputs {
  _call: SetPaymentTokensCall;

  constructor(call: SetPaymentTokensCall) {
    this._call = call;
  }
}

export class SetPaymentTokensCallSwapInfos_Struct extends ethereum.Tuple {
  get poolFee(): i32 {
    return this[0].toI32();
  }

  get secondsAgo(): i32 {
    return this[1].toI32();
  }
}

export class SetPointTokenCall extends ethereum.Call {
  get inputs(): SetPointTokenCall__Inputs {
    return new SetPointTokenCall__Inputs(this);
  }

  get outputs(): SetPointTokenCall__Outputs {
    return new SetPointTokenCall__Outputs(this);
  }
}

export class SetPointTokenCall__Inputs {
  _call: SetPointTokenCall;

  constructor(call: SetPointTokenCall) {
    this._call = call;
  }

  get pointToken_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPointTokenCall__Outputs {
  _call: SetPointTokenCall;

  constructor(call: SetPointTokenCall) {
    this._call = call;
  }
}

export class SetTreasuryCall extends ethereum.Call {
  get inputs(): SetTreasuryCall__Inputs {
    return new SetTreasuryCall__Inputs(this);
  }

  get outputs(): SetTreasuryCall__Outputs {
    return new SetTreasuryCall__Outputs(this);
  }
}

export class SetTreasuryCall__Inputs {
  _call: SetTreasuryCall;

  constructor(call: SetTreasuryCall) {
    this._call = call;
  }

  get treasury_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTreasuryCall__Outputs {
  _call: SetTreasuryCall;

  constructor(call: SetTreasuryCall) {
    this._call = call;
  }
}

export class SetUniPriceOracleCall extends ethereum.Call {
  get inputs(): SetUniPriceOracleCall__Inputs {
    return new SetUniPriceOracleCall__Inputs(this);
  }

  get outputs(): SetUniPriceOracleCall__Outputs {
    return new SetUniPriceOracleCall__Outputs(this);
  }
}

export class SetUniPriceOracleCall__Inputs {
  _call: SetUniPriceOracleCall;

  constructor(call: SetUniPriceOracleCall) {
    this._call = call;
  }

  get uniPriceOracle_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetUniPriceOracleCall__Outputs {
  _call: SetUniPriceOracleCall;

  constructor(call: SetUniPriceOracleCall) {
    this._call = call;
  }
}

export class SetupCall extends ethereum.Call {
  get inputs(): SetupCall__Inputs {
    return new SetupCall__Inputs(this);
  }

  get outputs(): SetupCall__Outputs {
    return new SetupCall__Outputs(this);
  }
}

export class SetupCall__Inputs {
  _call: SetupCall;

  constructor(call: SetupCall) {
    this._call = call;
  }

  get pointToken_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get cashback_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get treasury_(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get uniPriceOracle_(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class SetupCall__Outputs {
  _call: SetupCall;

  constructor(call: SetupCall) {
    this._call = call;
  }
}

export class UpgradeToCall extends ethereum.Call {
  get inputs(): UpgradeToCall__Inputs {
    return new UpgradeToCall__Inputs(this);
  }

  get outputs(): UpgradeToCall__Outputs {
    return new UpgradeToCall__Outputs(this);
  }
}

export class UpgradeToCall__Inputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeToCall__Outputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }
}

export class UpgradeToAndCallCall extends ethereum.Call {
  get inputs(): UpgradeToAndCallCall__Inputs {
    return new UpgradeToAndCallCall__Inputs(this);
  }

  get outputs(): UpgradeToAndCallCall__Outputs {
    return new UpgradeToAndCallCall__Outputs(this);
  }
}

export class UpgradeToAndCallCall__Inputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpgradeToAndCallCall__Outputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }
}
